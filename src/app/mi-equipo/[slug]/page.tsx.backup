'use client';

import { useRouter } from 'next/navigation';
import { useTeamWithDetails } from '@/hooks/team-hub/useTeamWithDetails';
import { TeamManagerView } from '@/components/team-hub/TeamManagerView';
import { TeamPlayerView } from '@/components/team-hub/TeamPlayerView';
import { TeamDashboardSkeleton } from '@/components/ui/TeamDashboardSkeleton';
import { TEAM_PAGE_SAFE_MODE } from '@/lib/flags';
import { logger } from '@/lib/logger';

export default function TeamPage({ params }: { params: { slug: string } }) {
  const router = useRouter();
  const {
    team,
    currentUserId,
    currentUserRole,
    permissions,
    isOwner,
    isManager,
    isPlayer,
    isAdmin,
    loading,
    error,
  } = useTeamWithDetails(params.slug);

  // Safe mode check - early return if enabled
  if (TEAM_PAGE_SAFE_MODE) {
    return (
      <div className="min-h-screen bg-gray-50 p-6">
        <div className="max-w-2xl mx-auto">
          <div className="bg-white rounded-lg shadow-sm p-8">
            <h1 className="text-2xl font-semibold text-gray-900 mb-4">Team Page (Safe Mode)</h1>
            <p className="text-sm text-gray-600 mb-4">
              Team detail page is temporarily limited while we fix a regression.
            </p>
            <div className="flex gap-3">
              <a
                href="/"
                className="inline-block px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
              >
                Home
              </a>
              <a
                href="/mi-equipo"
                className="inline-block px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
              >
                My Teams
              </a>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // Loading state
  if (loading) {
    return <TeamDashboardSkeleton />;
  }

  // Error state
  if (error || !team) {
    logger.error('Team page error:', error);
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">Equipo no encontrado</h1>
          <p className="text-gray-600 mb-6">
            {error?.message || 'No pudimos cargar la información del equipo'}
          </p>
          <button
            onClick={() => router.push('/mi-equipo')}
            className="text-blue-600 hover:text-blue-700 font-medium"
          >
            ← Volver a mis equipos
          </button>
        </div>
      </div>
    );
  }

  // User not authorized (not a member)
  if (!currentUserRole && !isAdmin) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center max-w-md">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">Acceso denegado</h1>
          <p className="text-gray-600 mb-6">
            No eres miembro de este equipo. Solicita una invitación al administrador.
          </p>
          <button
            onClick={() => router.push('/mi-equipo')}
            className="text-blue-600 hover:text-blue-700 font-medium"
          >
            ← Volver a mis equipos
          </button>
        </div>
      </div>
    );
  }

  // Render appropriate dashboard based on role
  if (isOwner || isManager || isAdmin) {
    return (
      <TeamManagerView
        team={team}
        currentUserId={currentUserId!}
        permissions={permissions!}
      />
    );
  } else {
    return (
      <TeamPlayerView
        team={team}
        currentUserId={currentUserId!}
        permissions={permissions!}
      />
    );
  }
}
